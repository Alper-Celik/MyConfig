" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

let mapleader = " "

set clipboard+=unnamedplus
set clipboard+=ideaput
nmap s <Action>(flash.search)

map İ I
"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" Do incremental searching.
set incsearch

" Don't use Ex mode, use Q for formatting.
map Q gq

set NERDTree
set peekaboo
set which-key
set multiple-cursors 
set showmode
" Remap multiple-cursors shortcuts to match terryma/vim-multiple-cursors
nmap <C-n> <Plug>NextWholeOccurrence
xmap <C-n> <Plug>NextWholeOccurrence
nmap g<C-n> <Plug>NextOccurrence
xmap g<C-n> <Plug>NextOccurrence
xmap <C-x> <Plug>SkipOccurrence
xmap <C-p> <Plug>RemoveOccurrence

" Note that the default <A-n> and g<A-n> shortcuts don't work on Mac due to dead keys.
" <A-n> is used to enter accented text e.g. ñ
" Feel free to pick your own mappings that are not affected. I like to use <leader>
nmap <leader><C-n> <Plug>AllWholeOccurrences
xmap <leader><C-n> <Plug>AllWholeOccurrences
nmap <leader>g<C-n> <Plug>AllOccurrences
xmap <leader>g<C-n> <Plug>AllOccurrences

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'


"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map <leader>cf to the Reformat Code action
map <leader>cf <Action>(ReformatCode)

"" Map <leader>d to start debug
map <leader>d <Action>(Debug)

"" Map <leader>b to toggle the breakpoint on the current line
map <leader>b <Action>(ToggleLineBreakpoint)

map <leader>z <action>(ToggleDistractionFreeMode)
" Map <leader><space> to file search
map <leader><space> <Action>(GotoFile)

" Map <leader>/ to fuzzy search
map <leader>/ <Action>(FindInPath)

" Map <leader>ca to code actions
map <leader>ca <Action>(ShowIntentionActions)

" Map <leader>cr to rename refactoring
map <leader>cr <Action>(RenameElement)

" Map <leader>gd to go to definition
map <leader>gd <Action>(GotoDeclaration)

" Map <leader>gi to go to implementation
map <leader>gi <Action>(GotoImplementation)

" Map <leader>gr to go to references
map <leader>gr <Action>(FindUsages)
